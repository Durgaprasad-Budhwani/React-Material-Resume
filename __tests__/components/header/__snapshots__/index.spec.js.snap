// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> renders header  1`] = `
<div
  className={Object {}}
>
  <div
    className={Object {}}
  />
  <header
    className="MuiPaper-root-18 MuiPaper-elevation4-24 MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed"
  >
    <div
      className="MuiToolbar-root-45 MuiToolbar-regular-47 MuiToolbar-gutters-46"
    >
      <button
        aria-label="Menu"
        className="MuiButtonBase-root-55 MuiIconButton-root-49 undefined"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onContextMenu={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex="0"
        type="button"
      >
        <span
          className="MuiIconButton-label-54"
        >
          <svg
            aria-hidden="true"
            className="MuiSvgIcon-root-58"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
            />
            <path
              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
            />
          </svg>
        </span>
        <span
          className="MuiTouchRipple-root-183"
        />
      </button>
      <div
        className={Object {}}
      />
      <div
        className="MuiGrid-container-67"
      >
        <div>
          <span
            className=""
          >
            About
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Experience
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Skills
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Education
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Blog
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Contact
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
      </div>
    </div>
  </header>
</div>
`;

exports[`<Header /> renders header container 1`] = `
<div
  className="Header-header-1"
>
  <div
    className="Header-headerBackground-4"
  />
  <header
    className="MuiPaper-root-18 MuiPaper-elevation4-24 MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed Header-headerBar-2"
  >
    <div
      className="MuiToolbar-root-45 MuiToolbar-regular-47 MuiToolbar-gutters-46"
    >
      <button
        aria-label="Menu"
        className="MuiButtonBase-root-55 MuiIconButton-root-49 undefined Header-hamburger-8"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onContextMenu={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex="0"
        type="button"
      >
        <span
          className="MuiIconButton-label-54"
        >
          <svg
            aria-hidden="true"
            className="MuiSvgIcon-root-58"
            focusable="false"
            role="presentation"
            viewBox="0 0 24 24"
          >
            <path
              d="M0 0h24v24H0z"
              fill="none"
            />
            <path
              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
            />
          </svg>
        </span>
        <span
          className="MuiTouchRipple-root-183"
        />
      </button>
      <div
        className="Header-flex-5"
      />
      <div
        className="MuiGrid-container-67 Header-horizontalNavigation-6"
      >
        <div>
          <span
            className=""
          >
            About
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Experience
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Skills
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Education
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Blog
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
        <div>
          <span
            className=""
          >
            Contact
          </span>
          <span
            className="LinkTo-spanClass-166"
          />
        </div>
      </div>
    </div>
  </header>
</div>
`;

exports[`<Header /> renders header with drawer is hidden 1`] = `
<Header
  classes={
    Object {
      "flex": Object {},
      "hamburger": Object {},
      "header": Object {},
      "headerBackground": Object {},
      "headerBar": Object {},
      "headerBarFixed": Object {},
      "horizontalNavigation": Object {},
      "verticalNavigation": Object {},
    }
  }
>
  <div
    className={Object {}}
  >
    <div
      className={Object {}}
    />
    <WithStyles(AppBar)
      className="[object Object]"
      position="fixed"
    >
      <AppBar
        className="[object Object]"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault-15",
            "colorPrimary": "MuiAppBar-colorPrimary-16",
            "colorSecondary": "MuiAppBar-colorSecondary-17",
            "positionAbsolute": "MuiAppBar-positionAbsolute-11",
            "positionFixed": "MuiAppBar-positionFixed-10",
            "positionRelative": "MuiAppBar-positionRelative-14",
            "positionStatic": "MuiAppBar-positionStatic-13",
            "positionSticky": "MuiAppBar-positionSticky-12",
            "root": "MuiAppBar-root-9",
          }
        }
        color="primary"
        position="fixed"
      >
        <WithStyles(Paper)
          className="MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
          component="header"
          elevation={4}
          square={true}
        >
          <Paper
            className="MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-20",
                "elevation1": "MuiPaper-elevation1-21",
                "elevation10": "MuiPaper-elevation10-30",
                "elevation11": "MuiPaper-elevation11-31",
                "elevation12": "MuiPaper-elevation12-32",
                "elevation13": "MuiPaper-elevation13-33",
                "elevation14": "MuiPaper-elevation14-34",
                "elevation15": "MuiPaper-elevation15-35",
                "elevation16": "MuiPaper-elevation16-36",
                "elevation17": "MuiPaper-elevation17-37",
                "elevation18": "MuiPaper-elevation18-38",
                "elevation19": "MuiPaper-elevation19-39",
                "elevation2": "MuiPaper-elevation2-22",
                "elevation20": "MuiPaper-elevation20-40",
                "elevation21": "MuiPaper-elevation21-41",
                "elevation22": "MuiPaper-elevation22-42",
                "elevation23": "MuiPaper-elevation23-43",
                "elevation24": "MuiPaper-elevation24-44",
                "elevation3": "MuiPaper-elevation3-23",
                "elevation4": "MuiPaper-elevation4-24",
                "elevation5": "MuiPaper-elevation5-25",
                "elevation6": "MuiPaper-elevation6-26",
                "elevation7": "MuiPaper-elevation7-27",
                "elevation8": "MuiPaper-elevation8-28",
                "elevation9": "MuiPaper-elevation9-29",
                "root": "MuiPaper-root-18",
                "rounded": "MuiPaper-rounded-19",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root-18 MuiPaper-elevation4-24 MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
            >
              <WithStyles(Toolbar)>
                <Toolbar
                  classes={
                    Object {
                      "dense": "MuiToolbar-dense-48",
                      "gutters": "MuiToolbar-gutters-46",
                      "regular": "MuiToolbar-regular-47",
                      "root": "MuiToolbar-root-45",
                    }
                  }
                  disableGutters={false}
                  variant="regular"
                >
                  <div
                    className="MuiToolbar-root-45 MuiToolbar-regular-47 MuiToolbar-gutters-46"
                  >
                    <WithStyles(IconButton)
                      aria-label="Menu"
                      className={Object {}}
                      color="contrast"
                      onClick={[Function]}
                    >
                      <IconButton
                        aria-label="Menu"
                        className={Object {}}
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit-50",
                            "colorPrimary": "MuiIconButton-colorPrimary-51",
                            "colorSecondary": "MuiIconButton-colorSecondary-52",
                            "disabled": "MuiIconButton-disabled-53",
                            "label": "MuiIconButton-label-54",
                            "root": "MuiIconButton-root-49",
                          }
                        }
                        color="contrast"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(ButtonBase)
                          aria-label="Menu"
                          centerRipple={true}
                          className="MuiIconButton-root-49 undefined"
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ButtonBase
                            aria-label="Menu"
                            centerRipple={true}
                            className="MuiIconButton-root-49 undefined"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-56",
                                "focusVisible": "MuiButtonBase-focusVisible-57",
                                "root": "MuiButtonBase-root-55",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              aria-label="Menu"
                              className="MuiButtonBase-root-55 MuiIconButton-root-49 undefined"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label-54"
                              >
                                <pure(MenuIcon)>
                                  <MenuIcon>
                                    <WithStyles(SvgIcon)>
                                      <SvgIcon
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction-61",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled-63",
                                            "colorError": "MuiSvgIcon-colorError-62",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary-59",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary-60",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-64",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-66",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-65",
                                            "root": "MuiSvgIcon-root-58",
                                          }
                                        }
                                        color="inherit"
                                        component="svg"
                                        fontSize="default"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root-58"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                          />
                                          <path
                                            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                          />
                                        </svg>
                                      </SvgIcon>
                                    </WithStyles(SvgIcon)>
                                  </MenuIcon>
                                </pure(MenuIcon)>
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={true}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-187",
                                        "childLeaving": "MuiTouchRipple-childLeaving-188",
                                        "childPulsate": "MuiTouchRipple-childPulsate-189",
                                        "ripple": "MuiTouchRipple-ripple-184",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-186",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-185",
                                        "root": "MuiTouchRipple-root-183",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-183"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-183"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </IconButton>
                    </WithStyles(IconButton)>
                    <div
                      className={Object {}}
                    />
                    <WithStyles(Grid)
                      className={Object {}}
                      container={true}
                      direction="row"
                      spacing={0}
                    >
                      <Grid
                        alignContent="stretch"
                        alignItems="stretch"
                        className={Object {}}
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center-79",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-81",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-80",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-83",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-82",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-78",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center-75",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-77",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-76",
                            "container": "MuiGrid-container-67",
                            "direction-xs-column": "MuiGrid-direction-xs-column-70",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-71",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-72",
                            "grid-lg-1": "MuiGrid-grid-lg-1-138",
                            "grid-lg-10": "MuiGrid-grid-lg-10-147",
                            "grid-lg-11": "MuiGrid-grid-lg-11-148",
                            "grid-lg-12": "MuiGrid-grid-lg-12-149",
                            "grid-lg-2": "MuiGrid-grid-lg-2-139",
                            "grid-lg-3": "MuiGrid-grid-lg-3-140",
                            "grid-lg-4": "MuiGrid-grid-lg-4-141",
                            "grid-lg-5": "MuiGrid-grid-lg-5-142",
                            "grid-lg-6": "MuiGrid-grid-lg-6-143",
                            "grid-lg-7": "MuiGrid-grid-lg-7-144",
                            "grid-lg-8": "MuiGrid-grid-lg-8-145",
                            "grid-lg-9": "MuiGrid-grid-lg-9-146",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto-136",
                            "grid-lg-true": "MuiGrid-grid-lg-true-137",
                            "grid-md-1": "MuiGrid-grid-md-1-124",
                            "grid-md-10": "MuiGrid-grid-md-10-133",
                            "grid-md-11": "MuiGrid-grid-md-11-134",
                            "grid-md-12": "MuiGrid-grid-md-12-135",
                            "grid-md-2": "MuiGrid-grid-md-2-125",
                            "grid-md-3": "MuiGrid-grid-md-3-126",
                            "grid-md-4": "MuiGrid-grid-md-4-127",
                            "grid-md-5": "MuiGrid-grid-md-5-128",
                            "grid-md-6": "MuiGrid-grid-md-6-129",
                            "grid-md-7": "MuiGrid-grid-md-7-130",
                            "grid-md-8": "MuiGrid-grid-md-8-131",
                            "grid-md-9": "MuiGrid-grid-md-9-132",
                            "grid-md-auto": "MuiGrid-grid-md-auto-122",
                            "grid-md-true": "MuiGrid-grid-md-true-123",
                            "grid-sm-1": "MuiGrid-grid-sm-1-110",
                            "grid-sm-10": "MuiGrid-grid-sm-10-119",
                            "grid-sm-11": "MuiGrid-grid-sm-11-120",
                            "grid-sm-12": "MuiGrid-grid-sm-12-121",
                            "grid-sm-2": "MuiGrid-grid-sm-2-111",
                            "grid-sm-3": "MuiGrid-grid-sm-3-112",
                            "grid-sm-4": "MuiGrid-grid-sm-4-113",
                            "grid-sm-5": "MuiGrid-grid-sm-5-114",
                            "grid-sm-6": "MuiGrid-grid-sm-6-115",
                            "grid-sm-7": "MuiGrid-grid-sm-7-116",
                            "grid-sm-8": "MuiGrid-grid-sm-8-117",
                            "grid-sm-9": "MuiGrid-grid-sm-9-118",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto-108",
                            "grid-sm-true": "MuiGrid-grid-sm-true-109",
                            "grid-xl-1": "MuiGrid-grid-xl-1-152",
                            "grid-xl-10": "MuiGrid-grid-xl-10-161",
                            "grid-xl-11": "MuiGrid-grid-xl-11-162",
                            "grid-xl-12": "MuiGrid-grid-xl-12-163",
                            "grid-xl-2": "MuiGrid-grid-xl-2-153",
                            "grid-xl-3": "MuiGrid-grid-xl-3-154",
                            "grid-xl-4": "MuiGrid-grid-xl-4-155",
                            "grid-xl-5": "MuiGrid-grid-xl-5-156",
                            "grid-xl-6": "MuiGrid-grid-xl-6-157",
                            "grid-xl-7": "MuiGrid-grid-xl-7-158",
                            "grid-xl-8": "MuiGrid-grid-xl-8-159",
                            "grid-xl-9": "MuiGrid-grid-xl-9-160",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto-150",
                            "grid-xl-true": "MuiGrid-grid-xl-true-151",
                            "grid-xs-1": "MuiGrid-grid-xs-1-96",
                            "grid-xs-10": "MuiGrid-grid-xs-10-105",
                            "grid-xs-11": "MuiGrid-grid-xs-11-106",
                            "grid-xs-12": "MuiGrid-grid-xs-12-107",
                            "grid-xs-2": "MuiGrid-grid-xs-2-97",
                            "grid-xs-3": "MuiGrid-grid-xs-3-98",
                            "grid-xs-4": "MuiGrid-grid-xs-4-99",
                            "grid-xs-5": "MuiGrid-grid-xs-5-100",
                            "grid-xs-6": "MuiGrid-grid-xs-6-101",
                            "grid-xs-7": "MuiGrid-grid-xs-7-102",
                            "grid-xs-8": "MuiGrid-grid-xs-8-103",
                            "grid-xs-9": "MuiGrid-grid-xs-9-104",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto-94",
                            "grid-xs-true": "MuiGrid-grid-xs-true-95",
                            "item": "MuiGrid-item-68",
                            "justify-xs-center": "MuiGrid-justify-xs-center-84",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-85",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-87",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-86",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-88",
                            "spacing-xs-16": "MuiGrid-spacing-xs-16-90",
                            "spacing-xs-24": "MuiGrid-spacing-xs-24-91",
                            "spacing-xs-32": "MuiGrid-spacing-xs-32-92",
                            "spacing-xs-40": "MuiGrid-spacing-xs-40-93",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8-89",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-73",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-74",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth-69",
                          }
                        }
                        component="div"
                        container={true}
                        direction="row"
                        item={false}
                        justify="flex-start"
                        lg={false}
                        md={false}
                        sm={false}
                        spacing={0}
                        wrap="wrap"
                        xl={false}
                        xs={false}
                        zeroMinWidth={false}
                      >
                        <div
                          className="MuiGrid-container-67"
                        >
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="About"
                            to="profile"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="About"
                              to="profile"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="profile"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    About
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Experience"
                            to="experience"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Experience"
                              to="experience"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="experience"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Experience
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Skills"
                            to="skills"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Skills"
                              to="skills"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="skills"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Skills
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Education"
                            to="education"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Education"
                              to="education"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="education"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Education
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Blog"
                            to="blog"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Blog"
                              to="blog"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="blog"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Blog
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            offset={-400}
                            title="Contact"
                            to="contact"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-400}
                              title="Contact"
                              to="contact"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-400}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="contact"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Contact
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                        </div>
                      </Grid>
                    </WithStyles(Grid)>
                  </div>
                </Toolbar>
              </WithStyles(Toolbar)>
            </header>
          </Paper>
        </WithStyles(Paper)>
      </AppBar>
    </WithStyles(AppBar)>
    <WithStyles(Drawer)
      anchor="left"
      onClose={[Function]}
      open={false}
    >
      <Drawer
        anchor="left"
        classes={
          Object {
            "docked": "MuiDrawer-docked-170",
            "modal": "MuiDrawer-modal-180",
            "paper": "MuiDrawer-paper-171",
            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom-175",
            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom-179",
            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft-176",
            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight-178",
            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop-177",
            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft-172",
            "paperAnchorRight": "MuiDrawer-paperAnchorRight-173",
            "paperAnchorTop": "MuiDrawer-paperAnchorTop-174",
            "root": "MuiDrawer-root-169",
          }
        }
        elevation={16}
        onClose={[Function]}
        open={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        transitionDuration={
          Object {
            "enter": 225,
            "exit": 195,
          }
        }
        variant="temporary"
      >
        <WithStyles(Modal)
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDrawer-root-169 MuiDrawer-modal-180"
          onClose={[Function]}
          open={false}
        >
          <Modal
            BackdropComponent={[Function]}
            BackdropProps={
              Object {
                "transitionDuration": Object {
                  "enter": 225,
                  "exit": 195,
                },
              }
            }
            className="MuiDrawer-root-169 MuiDrawer-modal-180"
            classes={
              Object {
                "hidden": "MuiModal-hidden-182",
                "root": "MuiModal-root-181",
              }
            }
            closeAfterTransition={false}
            disableAutoFocus={false}
            disableBackdropClick={false}
            disableEnforceFocus={false}
            disableEscapeKeyDown={false}
            disablePortal={false}
            disableRestoreFocus={false}
            hideBackdrop={false}
            keepMounted={false}
            manager={
              ModalManager {
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "modals": Array [],
              }
            }
            onClose={[Function]}
            open={false}
          />
        </WithStyles(Modal)>
      </Drawer>
    </WithStyles(Drawer)>
  </div>
</Header>
`;

exports[`<Header /> renders header with handle scroll event 1`] = `
<Header
  classes={
    Object {
      "flex": Object {},
      "hamburger": Object {},
      "header": Object {},
      "headerBackground": Object {},
      "headerBar": Object {},
      "headerBarFixed": Object {},
      "horizontalNavigation": Object {},
      "verticalNavigation": Object {},
    }
  }
>
  <div
    className={Object {}}
  >
    <div
      className={Object {}}
    />
    <WithStyles(AppBar)
      className="[object Object]"
      position="fixed"
    >
      <AppBar
        className="[object Object]"
        classes={
          Object {
            "colorDefault": "MuiAppBar-colorDefault-15",
            "colorPrimary": "MuiAppBar-colorPrimary-16",
            "colorSecondary": "MuiAppBar-colorSecondary-17",
            "positionAbsolute": "MuiAppBar-positionAbsolute-11",
            "positionFixed": "MuiAppBar-positionFixed-10",
            "positionRelative": "MuiAppBar-positionRelative-14",
            "positionStatic": "MuiAppBar-positionStatic-13",
            "positionSticky": "MuiAppBar-positionSticky-12",
            "root": "MuiAppBar-root-9",
          }
        }
        color="primary"
        position="fixed"
      >
        <WithStyles(Paper)
          className="MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
          component="header"
          elevation={4}
          square={true}
        >
          <Paper
            className="MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0-20",
                "elevation1": "MuiPaper-elevation1-21",
                "elevation10": "MuiPaper-elevation10-30",
                "elevation11": "MuiPaper-elevation11-31",
                "elevation12": "MuiPaper-elevation12-32",
                "elevation13": "MuiPaper-elevation13-33",
                "elevation14": "MuiPaper-elevation14-34",
                "elevation15": "MuiPaper-elevation15-35",
                "elevation16": "MuiPaper-elevation16-36",
                "elevation17": "MuiPaper-elevation17-37",
                "elevation18": "MuiPaper-elevation18-38",
                "elevation19": "MuiPaper-elevation19-39",
                "elevation2": "MuiPaper-elevation2-22",
                "elevation20": "MuiPaper-elevation20-40",
                "elevation21": "MuiPaper-elevation21-41",
                "elevation22": "MuiPaper-elevation22-42",
                "elevation23": "MuiPaper-elevation23-43",
                "elevation24": "MuiPaper-elevation24-44",
                "elevation3": "MuiPaper-elevation3-23",
                "elevation4": "MuiPaper-elevation4-24",
                "elevation5": "MuiPaper-elevation5-25",
                "elevation6": "MuiPaper-elevation6-26",
                "elevation7": "MuiPaper-elevation7-27",
                "elevation8": "MuiPaper-elevation8-28",
                "elevation9": "MuiPaper-elevation9-29",
                "root": "MuiPaper-root-18",
                "rounded": "MuiPaper-rounded-19",
              }
            }
            component="header"
            elevation={4}
            square={true}
          >
            <header
              className="MuiPaper-root-18 MuiPaper-elevation4-24 MuiAppBar-root-9 MuiAppBar-positionFixed-10 MuiAppBar-colorPrimary-16 mui-fixed [object Object]"
            >
              <WithStyles(Toolbar)>
                <Toolbar
                  classes={
                    Object {
                      "dense": "MuiToolbar-dense-48",
                      "gutters": "MuiToolbar-gutters-46",
                      "regular": "MuiToolbar-regular-47",
                      "root": "MuiToolbar-root-45",
                    }
                  }
                  disableGutters={false}
                  variant="regular"
                >
                  <div
                    className="MuiToolbar-root-45 MuiToolbar-regular-47 MuiToolbar-gutters-46"
                  >
                    <WithStyles(IconButton)
                      aria-label="Menu"
                      className={Object {}}
                      color="contrast"
                      onClick={[Function]}
                    >
                      <IconButton
                        aria-label="Menu"
                        className={Object {}}
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit-50",
                            "colorPrimary": "MuiIconButton-colorPrimary-51",
                            "colorSecondary": "MuiIconButton-colorSecondary-52",
                            "disabled": "MuiIconButton-disabled-53",
                            "label": "MuiIconButton-label-54",
                            "root": "MuiIconButton-root-49",
                          }
                        }
                        color="contrast"
                        disabled={false}
                        onClick={[Function]}
                      >
                        <WithStyles(ButtonBase)
                          aria-label="Menu"
                          centerRipple={true}
                          className="MuiIconButton-root-49 undefined"
                          disabled={false}
                          focusRipple={true}
                          onClick={[Function]}
                        >
                          <ButtonBase
                            aria-label="Menu"
                            centerRipple={true}
                            className="MuiIconButton-root-49 undefined"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-56",
                                "focusVisible": "MuiButtonBase-focusVisible-57",
                                "root": "MuiButtonBase-root-55",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              aria-label="Menu"
                              className="MuiButtonBase-root-55 MuiIconButton-root-49 undefined"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiIconButton-label-54"
                              >
                                <pure(MenuIcon)>
                                  <MenuIcon>
                                    <WithStyles(SvgIcon)>
                                      <SvgIcon
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction-61",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled-63",
                                            "colorError": "MuiSvgIcon-colorError-62",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary-59",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary-60",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-64",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-66",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-65",
                                            "root": "MuiSvgIcon-root-58",
                                          }
                                        }
                                        color="inherit"
                                        component="svg"
                                        fontSize="default"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root-58"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                          />
                                          <path
                                            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                          />
                                        </svg>
                                      </SvgIcon>
                                    </WithStyles(SvgIcon)>
                                  </MenuIcon>
                                </pure(MenuIcon)>
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={true}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-187",
                                        "childLeaving": "MuiTouchRipple-childLeaving-188",
                                        "childPulsate": "MuiTouchRipple-childPulsate-189",
                                        "ripple": "MuiTouchRipple-ripple-184",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-186",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-185",
                                        "root": "MuiTouchRipple-root-183",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-183"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-183"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </IconButton>
                    </WithStyles(IconButton)>
                    <div
                      className={Object {}}
                    />
                    <WithStyles(Grid)
                      className={Object {}}
                      container={true}
                      direction="row"
                      spacing={0}
                    >
                      <Grid
                        alignContent="stretch"
                        alignItems="stretch"
                        className={Object {}}
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center-79",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-81",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-80",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-83",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-82",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-78",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center-75",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-77",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-76",
                            "container": "MuiGrid-container-67",
                            "direction-xs-column": "MuiGrid-direction-xs-column-70",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-71",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-72",
                            "grid-lg-1": "MuiGrid-grid-lg-1-138",
                            "grid-lg-10": "MuiGrid-grid-lg-10-147",
                            "grid-lg-11": "MuiGrid-grid-lg-11-148",
                            "grid-lg-12": "MuiGrid-grid-lg-12-149",
                            "grid-lg-2": "MuiGrid-grid-lg-2-139",
                            "grid-lg-3": "MuiGrid-grid-lg-3-140",
                            "grid-lg-4": "MuiGrid-grid-lg-4-141",
                            "grid-lg-5": "MuiGrid-grid-lg-5-142",
                            "grid-lg-6": "MuiGrid-grid-lg-6-143",
                            "grid-lg-7": "MuiGrid-grid-lg-7-144",
                            "grid-lg-8": "MuiGrid-grid-lg-8-145",
                            "grid-lg-9": "MuiGrid-grid-lg-9-146",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto-136",
                            "grid-lg-true": "MuiGrid-grid-lg-true-137",
                            "grid-md-1": "MuiGrid-grid-md-1-124",
                            "grid-md-10": "MuiGrid-grid-md-10-133",
                            "grid-md-11": "MuiGrid-grid-md-11-134",
                            "grid-md-12": "MuiGrid-grid-md-12-135",
                            "grid-md-2": "MuiGrid-grid-md-2-125",
                            "grid-md-3": "MuiGrid-grid-md-3-126",
                            "grid-md-4": "MuiGrid-grid-md-4-127",
                            "grid-md-5": "MuiGrid-grid-md-5-128",
                            "grid-md-6": "MuiGrid-grid-md-6-129",
                            "grid-md-7": "MuiGrid-grid-md-7-130",
                            "grid-md-8": "MuiGrid-grid-md-8-131",
                            "grid-md-9": "MuiGrid-grid-md-9-132",
                            "grid-md-auto": "MuiGrid-grid-md-auto-122",
                            "grid-md-true": "MuiGrid-grid-md-true-123",
                            "grid-sm-1": "MuiGrid-grid-sm-1-110",
                            "grid-sm-10": "MuiGrid-grid-sm-10-119",
                            "grid-sm-11": "MuiGrid-grid-sm-11-120",
                            "grid-sm-12": "MuiGrid-grid-sm-12-121",
                            "grid-sm-2": "MuiGrid-grid-sm-2-111",
                            "grid-sm-3": "MuiGrid-grid-sm-3-112",
                            "grid-sm-4": "MuiGrid-grid-sm-4-113",
                            "grid-sm-5": "MuiGrid-grid-sm-5-114",
                            "grid-sm-6": "MuiGrid-grid-sm-6-115",
                            "grid-sm-7": "MuiGrid-grid-sm-7-116",
                            "grid-sm-8": "MuiGrid-grid-sm-8-117",
                            "grid-sm-9": "MuiGrid-grid-sm-9-118",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto-108",
                            "grid-sm-true": "MuiGrid-grid-sm-true-109",
                            "grid-xl-1": "MuiGrid-grid-xl-1-152",
                            "grid-xl-10": "MuiGrid-grid-xl-10-161",
                            "grid-xl-11": "MuiGrid-grid-xl-11-162",
                            "grid-xl-12": "MuiGrid-grid-xl-12-163",
                            "grid-xl-2": "MuiGrid-grid-xl-2-153",
                            "grid-xl-3": "MuiGrid-grid-xl-3-154",
                            "grid-xl-4": "MuiGrid-grid-xl-4-155",
                            "grid-xl-5": "MuiGrid-grid-xl-5-156",
                            "grid-xl-6": "MuiGrid-grid-xl-6-157",
                            "grid-xl-7": "MuiGrid-grid-xl-7-158",
                            "grid-xl-8": "MuiGrid-grid-xl-8-159",
                            "grid-xl-9": "MuiGrid-grid-xl-9-160",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto-150",
                            "grid-xl-true": "MuiGrid-grid-xl-true-151",
                            "grid-xs-1": "MuiGrid-grid-xs-1-96",
                            "grid-xs-10": "MuiGrid-grid-xs-10-105",
                            "grid-xs-11": "MuiGrid-grid-xs-11-106",
                            "grid-xs-12": "MuiGrid-grid-xs-12-107",
                            "grid-xs-2": "MuiGrid-grid-xs-2-97",
                            "grid-xs-3": "MuiGrid-grid-xs-3-98",
                            "grid-xs-4": "MuiGrid-grid-xs-4-99",
                            "grid-xs-5": "MuiGrid-grid-xs-5-100",
                            "grid-xs-6": "MuiGrid-grid-xs-6-101",
                            "grid-xs-7": "MuiGrid-grid-xs-7-102",
                            "grid-xs-8": "MuiGrid-grid-xs-8-103",
                            "grid-xs-9": "MuiGrid-grid-xs-9-104",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto-94",
                            "grid-xs-true": "MuiGrid-grid-xs-true-95",
                            "item": "MuiGrid-item-68",
                            "justify-xs-center": "MuiGrid-justify-xs-center-84",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-85",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-87",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-86",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-88",
                            "spacing-xs-16": "MuiGrid-spacing-xs-16-90",
                            "spacing-xs-24": "MuiGrid-spacing-xs-24-91",
                            "spacing-xs-32": "MuiGrid-spacing-xs-32-92",
                            "spacing-xs-40": "MuiGrid-spacing-xs-40-93",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8-89",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-73",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-74",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth-69",
                          }
                        }
                        component="div"
                        container={true}
                        direction="row"
                        item={false}
                        justify="flex-start"
                        lg={false}
                        md={false}
                        sm={false}
                        spacing={0}
                        wrap="wrap"
                        xl={false}
                        xs={false}
                        zeroMinWidth={false}
                      >
                        <div
                          className="MuiGrid-container-67"
                        >
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="About"
                            to="profile"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="About"
                              to="profile"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="profile"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    About
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Experience"
                            to="experience"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Experience"
                              to="experience"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="experience"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Experience
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Skills"
                            to="skills"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Skills"
                              to="skills"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="skills"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Skills
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Education"
                            to="education"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Education"
                              to="education"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="education"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Education
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            title="Blog"
                            to="blog"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-120}
                              title="Blog"
                              to="blog"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-120}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="blog"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Blog
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                          <WithStyles(LinkTo)
                            enableNavigationItemClass={true}
                            offset={-400}
                            title="Contact"
                            to="contact"
                          >
                            <LinkTo
                              classes={
                                Object {
                                  "activeSpanClass": "LinkTo-activeSpanClass-167",
                                  "activeTitle": "LinkTo-activeTitle-168",
                                  "navigationItem": "LinkTo-navigationItem-165",
                                  "scrollChor": "LinkTo-scrollChor-164",
                                  "spanClass": "LinkTo-spanClass-166",
                                }
                              }
                              enableNavigationItemClass={true}
                              offset={-400}
                              title="Contact"
                              to="contact"
                            >
                              <Link
                                className="LinkTo-scrollChor-164 LinkTo-navigationItem-165"
                                duration={500}
                                offset={-400}
                                onSetActive={[Function]}
                                onSetInactive={[Function]}
                                smooth={true}
                                spy={true}
                                to="contact"
                              >
                                <div>
                                  <span
                                    className=""
                                  >
                                    Contact
                                  </span>
                                  <span
                                    className="LinkTo-spanClass-166"
                                  />
                                </div>
                              </Link>
                            </LinkTo>
                          </WithStyles(LinkTo)>
                        </div>
                      </Grid>
                    </WithStyles(Grid)>
                  </div>
                </Toolbar>
              </WithStyles(Toolbar)>
            </header>
          </Paper>
        </WithStyles(Paper)>
      </AppBar>
    </WithStyles(AppBar)>
    <WithStyles(Drawer)
      anchor="left"
      onClose={[Function]}
      open={false}
    >
      <Drawer
        anchor="left"
        classes={
          Object {
            "docked": "MuiDrawer-docked-170",
            "modal": "MuiDrawer-modal-180",
            "paper": "MuiDrawer-paper-171",
            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom-175",
            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom-179",
            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft-176",
            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight-178",
            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop-177",
            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft-172",
            "paperAnchorRight": "MuiDrawer-paperAnchorRight-173",
            "paperAnchorTop": "MuiDrawer-paperAnchorTop-174",
            "root": "MuiDrawer-root-169",
          }
        }
        elevation={16}
        onClose={[Function]}
        open={false}
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#d32f2f",
                "light": "#e57373",
                "main": "#f44336",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#303f9f",
                "light": "#7986cb",
                "main": "#3f51b5",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#c51162",
                "light": "#ff4081",
                "main": "#f50057",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.46429em",
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "lineHeight": "1.71429em",
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "lineHeight": "1.375em",
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 400,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 400,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 300,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 500,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": false,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
        transitionDuration={
          Object {
            "enter": 225,
            "exit": 195,
          }
        }
        variant="temporary"
      >
        <WithStyles(Modal)
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDrawer-root-169 MuiDrawer-modal-180"
          onClose={[Function]}
          open={false}
        >
          <Modal
            BackdropComponent={[Function]}
            BackdropProps={
              Object {
                "transitionDuration": Object {
                  "enter": 225,
                  "exit": 195,
                },
              }
            }
            className="MuiDrawer-root-169 MuiDrawer-modal-180"
            classes={
              Object {
                "hidden": "MuiModal-hidden-182",
                "root": "MuiModal-root-181",
              }
            }
            closeAfterTransition={false}
            disableAutoFocus={false}
            disableBackdropClick={false}
            disableEnforceFocus={false}
            disableEscapeKeyDown={false}
            disablePortal={false}
            disableRestoreFocus={false}
            hideBackdrop={false}
            keepMounted={false}
            manager={
              ModalManager {
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "modals": Array [],
              }
            }
            onClose={[Function]}
            open={false}
          />
        </WithStyles(Modal)>
      </Drawer>
    </WithStyles(Drawer)>
  </div>
</Header>
`;
